{"version":3,"sources":["data.js","components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["chillHop","name","cover","artist","audio","color","id","uuidv4","active","Player","currentSong","setCurrentSong","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setSongs","songVolume","setSongVolume","useState","isClicked","setIsClicked","getTime","time","Math","floor","slice","useEffect","newSongs","map","song","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","className","duration","currentTime","min","max","value","onChange","e","target","type","onClick","volume","console","log","icon","faVolumeUp","faVolumeMute","step","currVolume","faAngleLeft","size","pause","faPause","faPlay","faAngleRight","Song","src","alt","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useRef","data","currentVolume","timeUpdateHandler","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","onVolumeChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f8f93b1.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n    return[\r\n        {\r\n            name: \"Sugarless\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/11/8a0c857ddad531279d0757f5362380a6837b1b69-1024x1024.jpg\",\r\n            artist: \"The Field Tapes, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=11243\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: true,\r\n        },\r\n        {\r\n            name: \"Through Trees\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/11/8a0c857ddad531279d0757f5362380a6837b1b69-1024x1024.jpg\",\r\n            artist: \"Sleepy Fish, The Field Tapes\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=11251\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n        name: \"Lax Incense\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/01/6b1bb8736ee3e972747bc11f312e31cf7f5823e4-1024x1024.jpg\",\r\n            artist: \"Mama Aiuto, Daphn√©\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=12125\",\r\n            color: [\"#BA4A46\", \"#FDF0DD\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Today Feels Like Everyday\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/01/6b1bb8736ee3e972747bc11f312e31cf7f5823e4-1024x1024.jpg\",\r\n            artist: \"Mama Aiuto\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=12128\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"All In Good Spirit\",\r\n            cover: \"https://chillhop.com/wp-content/themes/chillhop/assets/images/releases/fall-2020/Slipmats-Chillhop-Fall-2020-MockUp.jpg\",\r\n            artist: \"Mama Aiuto\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9261\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Hidden Structure\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/88e7eb711f8c71d87fc102e97cf91e36f692348d-1024x1024.jpg\",\r\n            artist: \"Leavv, Flitz&Suppe\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9913\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Flushing the Stairs\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/6defa6c89a6902fdd84bccd720c2b8fd29c40990-1024x1024.jpg\",\r\n            artist: \"Leavv\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9917\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n    ]\r\n}\r\n\r\nexport default chillHop;","import React, {useState, useEffect} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faPlay, faPause, faAngleLeft, faAngleRight, faVolumeMute, faVolumeUp} from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Player = ({ currentSong, setCurrentSong, isPlaying, \r\n                setIsPlaying, audioRef, songInfo, setSongInfo, \r\n                songs, setSongs, songVolume, setSongVolume }) => \r\n                {\r\n\r\n//state\r\nconst [isClicked, setIsClicked] = useState(true);\r\n\r\n//Event Handlers\r\nconst playSongHandler = () => {\r\n    if (isPlaying) {\r\n        audioRef.current.pause();\r\n        setIsPlaying(!isPlaying);\r\n    } else {\r\n        audioRef.current.play();\r\n        setIsPlaying(!isPlaying);\r\n    }\r\n};\r\n\r\nconst muteHandler = () => {\r\n    if(isClicked) {\r\n        setSongVolume(audioRef.current.volume = 0);\r\n        setIsClicked(isClicked ? false : true);\r\n        } else {\r\n        setSongVolume(audioRef.current.volume = 1);  \r\n        setIsClicked(isClicked ? false : true);  \r\n        }\r\n    console.log(audioRef.current.volume)\r\n   }\r\n\r\n\r\n\r\nconst getTime = (time) => {\r\n    return(\r\n        Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n};\r\n\r\n//useEffect\r\nuseEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n        if(song.id === currentSong.id){\r\n            return{\r\n                ...song,\r\n                active: true,\r\n            }\r\n        }else{\r\n            return{\r\n                ...song,\r\n                active: false,\r\n            }\r\n        }\r\n        });\r\n        setSongs(newSongs);\r\n    }, [currentSong]);\r\n\r\nconst dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({...songInfo, currentTime: e.target.value});\r\n    }\r\nconst volumeHandler = (e) => {\r\n    audioRef.current.volume = e.target.value;\r\n    setSongVolume({...songVolume, currVolume: e.target.value})\r\n    console.log(audioRef.current.volume)\r\n    }\r\n\r\nconst skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if(direction === \"skip-forward\") {\r\n        await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if(direction === \"skip-back\") {\r\n        if((currentIndex -1) % songs.length === -1){\r\n            await setCurrentSong(songs[songs.length - 1]);\r\n            if(isPlaying) audioRef.current.play();\r\n            return\r\n        }\r\n        setCurrentSong(songs[(currentIndex + -1) % songs.length]);\r\n    }\r\n    if(isPlaying) audioRef.current.play();\r\n    };\r\n\r\nreturn(\r\n    <div className=\"player\">\r\n        <div className=\"time-control\">\r\n            <p>{songInfo.duration ? getTime(songInfo.currentTime) : \"0:00\"}</p>\r\n            <input \r\n                min={0} \r\n                max={songInfo.duration || 0} \r\n                value={songInfo.currentTime} \r\n                onChange={dragHandler}\r\n                type=\"range\"/>\r\n            <p>{getTime(songInfo.duration)}</p>\r\n        </div>\r\n        <div className=\"volume\">\r\n            <FontAwesomeIcon onClick={muteHandler}\r\n            className=\"volume\"\r\n            icon={isClicked ? faVolumeUp : faVolumeMute} />\r\n        <input min={0} \r\n            max={1}\r\n            step=\"0.01\"\r\n            value={songVolume.currVolume || ''} \r\n            onChange={volumeHandler} \r\n            type=\"range\" \r\n        />\r\n        </div>\r\n        <div className=\"play-control\">\r\n            <FontAwesomeIcon\r\n                onClick={() => skipTrackHandler('skip-back')} \r\n                className=\"skip-back\" \r\n                icon={faAngleLeft} \r\n                size=\"2x\" />\r\n            <FontAwesomeIcon \r\n                onClick={playSongHandler} \r\n                className=\"play\" \r\n                icon={isPlaying ? faPause : faPlay } \r\n                size=\"2x\" />\r\n            <FontAwesomeIcon\r\n                onClick={() => skipTrackHandler('skip-forward')} \r\n                className=\"skip-forward\" \r\n                icon={faAngleRight} \r\n                size=\"2x\" />\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nconst Song = ({currentSong}) => {\r\n    return(\r\n        <div className=\"song-container\">\r\n            <img src={currentSong.cover} alt={currentSong.name}></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default Song;","import React from 'react';\r\n\r\nconst LibrarySong = ({song, songs, setCurrentSong, id, audioRef, isPlaying, setSongs}) => {\r\nconst songSelectHandler = async () => {\r\nconst selectedSong = songs.filter((state) => state.id === id);\r\n    await setCurrentSong(selectedSong[0]);\r\nconst newSongs = songs.map((song) => {\r\n    if(song.id === id){\r\n        return{\r\n            ...song,\r\n            active: true,\r\n        }\r\n    }else{\r\n        return{\r\n            ...song,\r\n            active: false,\r\n        }\r\n    }\r\n    });\r\n    setSongs(newSongs);\r\n    if(isPlaying) audioRef.current.play();\r\n    };\r\n        \r\n    return(\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\r\n            <img src={song.cover} alt={song.name}></img>\r\n            <div className=\"song-description\">\r\n            <h3>{song.name}</h3>\r\n            <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default LibrarySong;","import React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\r\n    return(\r\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map((song) => (\r\n            <LibrarySong \r\n                songs={songs} \r\n                setCurrentSong={setCurrentSong} \r\n                song={song}\r\n                audioRef={audioRef}\r\n                id={song.id}\r\n                key={song.id}\r\n                isPlaying={isPlaying}\r\n                setSongs={setSongs}\r\n            />\r\n            ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library;","import React from 'react'\r\nimport {fontawesome} from '@fortawesome/react-fontawesome'\r\nimport {faMusic} from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Nav = ({setLibraryStatus, libraryStatus}) => {\r\n    return(\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;","import React, { useState, useRef } from 'react'\nimport data from './data'\n\n//Styles\nimport \"./styles/app.scss\";\nimport \"./styles/_library.scss\"\n\n//Components\nimport Player from './components/Player'\nimport Song from './components/Song'\nimport Library from './components/Library'\nimport Nav from './components/Nav'\n\nfunction App() {\nconst audioRef = useRef(null);\n//State\nconst [songInfo, setSongInfo] = useState({currentTime: 0, duration: 0});\nconst [songs, setSongs] = useState(data());\nconst [currentSong, setCurrentSong] = useState(songs[0]);\nconst [isPlaying, setIsPlaying] = useState(false);\nconst [libraryStatus, setLibraryStatus] = useState(false);\nconst [songVolume, setSongVolume] = useState({currentVolume: 1});\n  \nconst timeUpdateHandler = (e) => {\nconst current = e.target.currentTime;\nconst duration = e.target.duration;\n  setSongInfo({...songInfo, currentTime: current, duration})\n};\n\nconst volumeUpdateHandler = (e) => {\n  const currVolume = e.target.volume;\nsetSongVolume({...songVolume, currentVolume: currVolume})\n}\n\nconst songEndHandler = async () => {\n  let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if(isPlaying) audioRef.current.play();\n}\n  return (\n    <div className=\"App\">\n    <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n    <Song currentSong={currentSong} />\n    <Player \n      audioRef={audioRef}\n      setIsPlaying={setIsPlaying}\n      currentSong={currentSong}\n      isPlaying={isPlaying}\n      songInfo={songInfo}\n      setSongInfo={setSongInfo}\n      songs={songs}\n      setSongs={setSongs}\n      setCurrentSong={setCurrentSong}\n      songVolume={songVolume}\n      setSongVolume={setSongVolume}\n      />\n    <Library \n      songs={songs}\n      setCurrentSong={setCurrentSong}\n      audioRef={audioRef}\n      isPlaying={isPlaying}\n      setSongs={setSongs}\n      libraryStatus={libraryStatus}\n      setLibraryStatus={setLibraryStatus}\n    />\n    <audio \n      onLoadedMetadata={timeUpdateHandler} \n      onTimeUpdate={timeUpdateHandler} \n      ref={audioRef} \n      src={currentSong.audio}\n      onEnded={songEndHandler}\n      onVolumeChange={volumeUpdateHandler}\n      >\n      </audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}