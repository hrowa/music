[{"C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\index.js":"1","C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\App.js":"3","C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\components\\Song.js":"4","C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\components\\Player.js":"5","C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\components\\Library.js":"6","C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\components\\LibrarySong.js":"7","C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\components\\Nav.js":"8","C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\data.js":"9"},{"size":478,"mtime":1612266573320,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1612266384232,"results":"12","hashOfConfig":"11"},{"size":2286,"mtime":1612869941779,"results":"13","hashOfConfig":"11"},{"size":336,"mtime":1612589588179,"results":"14","hashOfConfig":"11"},{"size":4126,"mtime":1612891511174,"results":"15","hashOfConfig":"11"},{"size":788,"mtime":1612675269701,"results":"16","hashOfConfig":"11"},{"size":986,"mtime":1612714637268,"results":"17","hashOfConfig":"11"},{"size":544,"mtime":1612865387087,"results":"18","hashOfConfig":"11"},{"size":2900,"mtime":1612890260393,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1bgmmdk",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\index.js",[],["41","42"],"C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\App.js",[],"C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\components\\Song.js",[],"C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\components\\Player.js",["43"],"import React, {useState, useEffect} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faPlay, faPause, faAngleLeft, faAngleRight, faVolumeMute, faVolumeUp} from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Player = ({ currentSong, setCurrentSong, isPlaying, \r\n                setIsPlaying, audioRef, songInfo, setSongInfo, \r\n                songs, setSongs, songVolume, setSongVolume }) => \r\n                {\r\n\r\n//state\r\nconst [isClicked, setIsClicked] = useState(true);\r\n\r\n//Event Handlers\r\nconst playSongHandler = () => {\r\n    if (isPlaying) {\r\n        audioRef.current.pause();\r\n        setIsPlaying(!isPlaying);\r\n    } else {\r\n        audioRef.current.play();\r\n        setIsPlaying(!isPlaying);\r\n    }\r\n};\r\n\r\nconst muteHandler = () => {\r\n    if(isClicked) {\r\n        setSongVolume(audioRef.current.volume = 0);\r\n        setIsClicked(isClicked ? false : true);\r\n        } else {\r\n        setSongVolume(audioRef.current.volume = 1);  \r\n        setIsClicked(isClicked ? false : true);  \r\n        }\r\n    console.log(audioRef.current.volume)\r\n   }\r\n\r\n\r\n\r\nconst getTime = (time) => {\r\n    return(\r\n        Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n};\r\n\r\n//useEffect\r\nuseEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n        if(song.id === currentSong.id){\r\n            return{\r\n                ...song,\r\n                active: true,\r\n            }\r\n        }else{\r\n            return{\r\n                ...song,\r\n                active: false,\r\n            }\r\n        }\r\n        });\r\n        setSongs(newSongs);\r\n    }, [currentSong]);\r\n\r\nconst dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({...songInfo, currentTime: e.target.value});\r\n    }\r\nconst volumeHandler = (e) => {\r\n    audioRef.current.volume = e.target.value;\r\n    setSongVolume({...songVolume, currVolume: e.target.value})\r\n    console.log(audioRef.current.volume)\r\n    }\r\n\r\nconst skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if(direction === \"skip-forward\") {\r\n        await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if(direction === \"skip-back\") {\r\n        if((currentIndex -1) % songs.length === -1){\r\n            await setCurrentSong(songs[songs.length - 1]);\r\n            if(isPlaying) audioRef.current.play();\r\n            return\r\n        }\r\n        setCurrentSong(songs[(currentIndex + -1) % songs.length]);\r\n    }\r\n    if(isPlaying) audioRef.current.play();\r\n    };\r\n\r\nreturn(\r\n    <div className=\"player\">\r\n        <div className=\"time-control\">\r\n            <p>{songInfo.duration ? getTime(songInfo.currentTime) : \"0:00\"}</p>\r\n            <input \r\n                min={0} \r\n                max={songInfo.duration || 0} \r\n                value={songInfo.currentTime} \r\n                onChange={dragHandler}\r\n                type=\"range\"/>\r\n            <p>{getTime(songInfo.duration)}</p>\r\n        </div>\r\n        <div className=\"volume\">\r\n            <FontAwesomeIcon onClick={muteHandler}\r\n            className=\"volume\"\r\n            icon={isClicked ? faVolumeUp : faVolumeMute} />\r\n        <input min={0} \r\n            max={1}\r\n            step=\"0.01\"\r\n            value={songVolume.currVolume || ''} \r\n            onChange={volumeHandler} \r\n            type=\"range\" \r\n        />\r\n        </div>\r\n        <div className=\"play-control\">\r\n            <FontAwesomeIcon\r\n                onClick={() => skipTrackHandler('skip-back')} \r\n                className=\"skip-back\" \r\n                icon={faAngleLeft} \r\n                size=\"2x\" />\r\n            <FontAwesomeIcon \r\n                onClick={playSongHandler} \r\n                className=\"play\" \r\n                icon={isPlaying ? faPause : faPlay } \r\n                size=\"2x\" />\r\n            <FontAwesomeIcon\r\n                onClick={() => skipTrackHandler('skip-forward')} \r\n                className=\"skip-forward\" \r\n                icon={faAngleRight} \r\n                size=\"2x\" />\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;","C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\components\\Library.js",[],"C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\components\\LibrarySong.js",[],"C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\components\\Nav.js",["44"],"import React from 'react'\r\nimport {fontawesome} from '@fortawesome/react-fontawesome'\r\nimport {faMusic} from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Nav = ({setLibraryStatus, libraryStatus}) => {\r\n    return(\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;","C:\\Users\\user\\Documents\\Projects\\Musci Player\\music-player\\src\\data.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":59,"column":8,"nodeType":"51","endLine":59,"endColumn":21,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":9,"nodeType":"55","messageId":"56","endLine":2,"endColumn":20},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["59"],"no-unused-vars","'fontawesome' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"62","text":"63"},[1607,1620],"[currentSong, setSongs, songs]"]